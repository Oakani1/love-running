

@import url('https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&family=Oswald:wght@200..700&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

/* Asterisk wildcards selector to overide default styles added by the browser */

* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

body {
    /*100vh;: This line sets the minimum height of the body element to 100 viewport heights (vh).
    The viewport height is the height of the user's visible window. This ensures the body element
    stretches at least to fill the entire viewport.*/
    min-height: 100vh;

    /*display: flex;: This line sets the display property of the body element to "flex".
    This enables using Flexbox for layout purposes within the body element*/
    display: flex;

    flex-direction: column;
    color: #3a3a3a;
    font-family: "Lato", sans-serif;
}


/* Header */
header {
    background-color: #ffffff;
    /**0: This sets the padding to 0 on the top and bottom sides.
    1rem: This sets the padding to 1rem (rem unit) on the left and right sides.
    1rem is equal to the current font size of the element.**/
    padding: 0 1rem;
    /* position: This property specifies the positioning method used for the element.
    fixed: This value makes the element stay fixed in its position when the user scrolls the page.
    The element remains stuck to the top of the viewport. */
    position: fixed;
    /*z-index: This property specifies the stack order of an element.
    An element with a higher z-index overlaps elements with lower or no z-index values.
    99: This value sets the z-index of the header to a relatively high number,
    ensuring it appears on top of most other elements on the page (assuming they don't have a higher z-index). */
    z-index: 99;
    /* the width of the header across screen*/
    width: 100%;
    /* horizontal, vertical, blur, color*/
    box-shadow: 0 2px 2px #3a3a3a;
    /* All items in header become part of flexbox */
    display: flex;
    /* decides space inbtween flexbox elements */
    justify-content: space-between;
    /*aligns items in flexbox to their base */
    align-items: baseline;

}
/* This means that all elements under header that are <a> will be affected*/
header a {
  /* This means no hyperlink styles will be added*/
  text-decoration: none;
  /*Inherits the color from body */
  color: inherit;
}

h1 {
    font-family: "oswald", sans-serif;
    text-transform: uppercase;
    letter-spacing: 2px;
    color: #252525
}

/*id attached to ul*/
#menu {
    font-size: 110%;
    letter-spacing: 4px;
    list-style-type: none;
}
/* menu > li targets everything under meu that is li*/
#menu >li {
    /* added margin to each item in the list*/
    margin-bottom: 1rem;

}

/* add highlight to let people know where they are */
.active {
  /*add line to text, could use text decoration*/
  border-bottom: 1px solid #3a3a3a   
}

/* Navbar styles with dropdown toggle */
nav {
    /* absolute postions it relative to the neasrst postion ancestor */
    position: absolute;
    background-color: #ffffff;
    width: 100%;
    /* horizontal, vertical, blur, color*/
    box-shadow: 0 2px 2px #3a3a3a;
    padding: 0 1rem;
    /* Aligns content of element to left using 0 */
    left: 0;
    /*block (default): Starts on a new line and takes up the full available width, like paragraphs or headings.
    inline: Acts like text, only occupying space for its content and doesn't start a new line, often used for links or small phrases within a line of text.
    flex: Used within a flexbox layout, allowing elements to resize and flex based on available space.
    grid: Defines a grid container for organizing content into rows and columns.*/
    display: none;
    /* this means the top of the element should start at the bottom of the parent
    this pushes the nav below the parent header */
    top: 100%;
}

/* Nav toggle */
/*Code added to html to control toggle of nav
  <input type="checkbox" id="nav-toggle" name="nav-toggle">
  <label for="nav-toggle" class="nav-toggle-label">x</label> */
  /* when text box is checked use ~ to target adjoining SIBLING nav element*/
  #nav-toggle:checked~nav {
    display: block;
  }

  /* Hides Nav toggle */
  #nav-toggle {
    display: none;
  }

  .nav-toggle-label {
    font-size: 2rem;
  }

/* Main content */
main {
    background-color: lightblue;
    /* flex: 1 0 auto; sets the flex properties for the <main> element:
    (flex-grow: 1) Grows to fill remaining space .
    (flex-shrink: 0) Doesn't shrink if there's not enough space .
    (flex-basis: auto) Maintains its default size initially. */
    flex: 1 0 auto;
    margin-top: 47px;
    

}

/* Footer */
#social-networks {
    text-align: center;
    padding: 20px 0;
    display: flex;
    justify-content: space-evenly;
    list-style-type: none;
}

#social-networks i {
  font-size: 160%;
  padding: 5%;
  color: #3a3a3a;

}


footer a {
    text-decoration: none;

}

/* media query: tablets and larger (768px and up) */
@media screen and (min-width:768px) {
    /* Header */
    nav {
     /* block (default): Starts on a new line and takes up the full available width, like paragraphs or headings.
    inline: Acts like text, only occupying space for its content and doesn't start a new line, often used for links or small phrases within a line of text.
    flex: Used within a flexbox layout, allowing elements to resize and flex based on available space.
    grid: Defines a grid container for organizing content into rows and columns. */
      display: block;
      /* This is useful for situations where you want to position elements relative to a specific container (the <nav> in this case) instead of the whole document.*/
      position: relative;
      box-shadow: none;
      width: fit-content;
      padding-right: 1rem;
    }

    #menu {
      display: flex;
    }

    /* > targets direct children of the element */
    #menu > li {
      padding-left: 1rem;
    }

    .nav-toggle-label {
      display: none;
    }

    #logo {
      font-size: 280%;
      /* Line height: The logo text has a line height of 75px.
      This ensures enough space between lines of text within the logo itself,
      making it fit comfortably within a vertical space of 75 pixels. */
      line-height: 75px;
      /* Margins: The logo has no top or bottom margin (set to 0).
      It does have a left and right margin of 0.5rem units (pixels or another unit depending on your setup).
      This adds some horizontal breathing room around the logo. */
      margin: 0 0.5rem
    }

    main {
      /* Push content down so header wont block it */
      margin-top: 79px;
    }
}


/* media query: tablets and larger (992px and up) */
@media screen and (min-width:992px) {

  /* every id with an <a> take will be affected */
  #menu a:hover {
    border-bottom: 1px solid #3a3a3a;

  }
  
}
